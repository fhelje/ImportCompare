{"version":3,"sources":["components/withRoot.js","pages/home/components/Logs.js","pages/home/home.js","pages/log_detail/components/EnvironmentInfo.js","pages/log_detail/components/Details.js","pages/log_detail/log-detail.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","typography","useNextVariants","palette","primary","deepPurple","secondary","main","green","withRoot","Component","props","react_default","a","createElement","core_styles","CssBaseline_default","CustomTableCell","withStyles","head","backgroundColor","blue","color","common","white","body","fontSize","TableCell","DubbleCell","_ref","value1","value2","showDiff","Fragment","core_index_es","variant","DubbleCellDuration","_ref2","percentage","milliseconds","toFormat","toFixed","SingleCell","_ref3","value","toTime","val","DateTime","fromISO","toDate","toDuration1","Duration","fromMillis","root","width","marginTop","spacing","unit","overflowX","table","minWidth","row","&:nth-of-type(odd)","background","default","_ref4","classes","rows","className","map","rowPair","row1","row2","key","id","Logs_DubbleCell","startDate","concat","endDate","Logs_DubbleCellDuration","duration","Logs_SingleCell","partnerName","todoID","fileName","numberOfRows","numberOfCommands","numberOfErrors","numberOfDuplicates","totalNumberOfEvents","href","console","log","logMissing","loading","marginLeft","_useState","useState","_useState2","Object","slicedToArray","timerToggle","setTimerToggle","_useState3","items","_useState4","data","setData","_useState5","_useState6","isLoading","setIsLoading","_useInterval","useInterval","startImmediate","callback","fetchData","start","stop","asyncToGenerator","regenerator_default","mark","_callee","result1","result2","combined","wrap","_context","prev","next","Promise","all","axios","sent","o1","o2","find","x","VSPerfTest","VSPerfTest2","this","apply","arguments","useEffect","control","checked","onChange","newValue","label","onClick","components_Logs","objectSpread","mixins","gutters","paddingTop","paddingBottom","environment","item","xs","ColoredNotZero","detail","Details_CustomTableCell","eventTypeID","description","numberOfRows1","numberOfRows2","Details_ColoredNotZero","todoLogDetailID","todoLogID","match","params","id1","parseInt","id2","item1","item2","environments","detail1","detail2","diff","retVal","objectWithoutProperties","differenceBy","each","rest","push","sortBy","container","components_Details","components_EnvironmentInfo","HomeLink","Link","assign","to","App","BrowserRouter","component","Route","exact","path","HomePage","LogDetail","textAlign","paddingLeft","paddingRight","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a091b1f2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\r\n\r\n// A theme with custom primary and secondary color.\r\n// It's optional.\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n  palette: {\r\n    primary: deepPurple,\r\n    secondary: {\r\n      main: green[700],\r\n    },\r\n  },\r\n});\r\n\r\nfunction withRoot(Component) {\r\n  function WithRoot(props) {\r\n    // MuiThemeProvider makes the theme available down the React tree\r\n    // thanks to React context.\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n        <CssBaseline />\r\n        <Component {...props} />\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n\r\n  return WithRoot;\r\n}\r\n\r\nexport default withRoot;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Table, TableBody, TableCell, TableHead, TableRow, Paper, Button, Typography } from \"@material-ui/core\";\r\nimport { Duration, DateTime } from \"luxon\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\n\r\nconst CustomTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: blue[500],\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: \"auto\",\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  row: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n});\r\n\r\n// const hasSameEvents = (r1, r2) => {\r\n//   return (\r\n//     r1.numberOfRows === r2.numberOfRows &&\r\n//     r1.numberOfCommands === r2.numberOfCommands &&\r\n//     r1.numberOfErrors === r2.numberOfErrors &&\r\n//     r1.numberOfDuplicates === r2.numberOfDuplicates\r\n//   );\r\n// };\r\n\r\nconst DubbleCell = ({ value1, value2, showDiff }) => {\r\n  const presentDiff = showDiff || false;\r\n\r\n  const color = presentDiff ? (value1 !== value2 ? \"error\" : \"default\") : \"default\";\r\n  return (\r\n    <>\r\n      <Typography variant=\"caption\" color={color}>\r\n        {value1}\r\n      </Typography>\r\n      <Typography variant=\"caption\" color={color}>\r\n        {value2}\r\n      </Typography>\r\n    </>\r\n  );\r\n};\r\n\r\nconst DubbleCellDuration = ({ value1, value2, showDiff }) => {\r\n  const color = value1 > value2 ? \"error\" : \"secondary\";\r\n  const percentage = (value2.milliseconds - value1.milliseconds) / value2.milliseconds;\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"caption\" color={color}>\r\n        {value1.toFormat(\"hh:mm:ss.SSS\")} ({(percentage * 100).toFixed(0)}%)\r\n      </Typography>\r\n      <Typography variant=\"caption\" color=\"default\">\r\n        {value2.toFormat(\"hh:mm:ss.SSS\")}\r\n      </Typography>\r\n    </>\r\n  );\r\n};\r\n\r\nconst SingleCell = ({ value }) => {\r\n  return <Typography variant=\"caption\">{value}</Typography>;\r\n};\r\n\r\nconst toTime = val => DateTime.fromISO(val).toFormat(\"HH:mm:ss\");\r\nconst toDate = val => DateTime.fromISO(val).toFormat(\"yyyy-MM-dd\");\r\nconst toDuration1 = val => Duration.fromMillis(val);\r\n\r\nconst logMissing = (row1, row2) => {\r\n  console.log(row1);\r\n  console.log(row2);\r\n  return null;\r\n};\r\n\r\nconst Logs = ({ classes, rows }) => {\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <CustomTableCell>Env</CustomTableCell>\r\n            <CustomTableCell>Date</CustomTableCell>\r\n            <CustomTableCell>Start/End</CustomTableCell>\r\n            <CustomTableCell>Duration</CustomTableCell>\r\n            <CustomTableCell>Partner</CustomTableCell>\r\n            <CustomTableCell>TodoID</CustomTableCell>\r\n            <CustomTableCell>File Name</CustomTableCell>\r\n            <CustomTableCell>Rows</CustomTableCell>\r\n            <CustomTableCell>Commands</CustomTableCell>\r\n            <CustomTableCell>Errors</CustomTableCell>\r\n            <CustomTableCell>Duplicates</CustomTableCell>\r\n            <CustomTableCell>Events</CustomTableCell>\r\n            <CustomTableCell>Details</CustomTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(rowPair => {\r\n            const row1 = rowPair[\"VSPerfTest\"];\r\n            const row2 = rowPair[\"VSPerfTest2\"];\r\n            return row1 && row2 ? (\r\n              <TableRow key={row1.id}>\r\n                <CustomTableCell>\r\n                  <DubbleCell value1=\"New\" value2=\"Old\" />\r\n                </CustomTableCell>\r\n                <CustomTableCell>\r\n                  <DubbleCell value1={toDate(row1.startDate)} value2={toDate(row2.startDate)} />\r\n                </CustomTableCell>\r\n                <CustomTableCell>\r\n                  <DubbleCell\r\n                    value1={`${toTime(row1.startDate)} - ${toTime(row1.endDate)}`}\r\n                    value2={`${toTime(row2.startDate)} - ${toTime(row2.endDate)}`}\r\n                  />\r\n                </CustomTableCell>\r\n                <CustomTableCell>\r\n                  <DubbleCellDuration value1={toDuration1(row1.duration)} value2={toDuration1(row2.duration)} />\r\n                </CustomTableCell>\r\n                <CustomTableCell>\r\n                  <SingleCell value={row1.partnerName} />\r\n                </CustomTableCell>\r\n                <CustomTableCell>\r\n                  <DubbleCell value1={row1.todoID} value2={row2.todoID} />\r\n                </CustomTableCell>\r\n                <CustomTableCell>\r\n                  <SingleCell value={row1.fileName} />\r\n                </CustomTableCell>\r\n                <CustomTableCell>\r\n                  <DubbleCell value1={row1.numberOfRows} value2={row2.numberOfRows} showDiff={true} />\r\n                </CustomTableCell>\r\n                <CustomTableCell>\r\n                  <DubbleCell value1={row1.numberOfCommands} value2={row2.numberOfCommands} showDiff={true} />\r\n                </CustomTableCell>\r\n                <CustomTableCell>\r\n                  <DubbleCell value1={row1.numberOfErrors} value2={row2.numberOfErrors} showDiff={true} />\r\n                </CustomTableCell>\r\n                <CustomTableCell>\r\n                  <DubbleCell value1={row1.numberOfDuplicates} value2={row2.numberOfDuplicates} showDiff={true} />\r\n                </CustomTableCell>\r\n                <CustomTableCell>\r\n                  <DubbleCell value1={row1.totalNumberOfEvents} value2={row2.totalNumberOfEvents} showDiff={true} />\r\n                </CustomTableCell>\r\n                <CustomTableCell>\r\n                  <Button href={`/log-detail/${row1.todoID}/${row2.todoID}`}>Show</Button>\r\n                </CustomTableCell>\r\n              </TableRow>\r\n            ) : (\r\n              logMissing(row1, row2)\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nLogs.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Logs);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useInterval } from \"react-powerhooks\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Typography, Button, Checkbox, FormGroup, FormControlLabel } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport Logs from \"./components/Logs\";\r\nimport { find } from \"lodash\";\r\nimport \"./home.css\";\r\n\r\nconst styles = theme => ({\r\n  loading: {\r\n    marginLeft: theme.spacing.unit * 2,\r\n    marginTop: theme.spacing.unit * 2 - 4,\r\n  },\r\n});\r\n\r\nconst HomePage = ({ classes }) => {\r\n  const [timerToggle, setTimerToggle] = useState(true);\r\n  const [data, setData] = useState({ items: [] });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { start, stop } = useInterval({\r\n    duration: 10000,\r\n    startImmediate: timerToggle,\r\n    callback: () => {\r\n      console.log(\"Refresh\");\r\n      fetchData();\r\n    },\r\n  });\r\n\r\n  const fetchData = async () => {\r\n    setIsLoading(true);\r\n    const [result1, result2] = await Promise.all([\r\n      axios(\"/api/importlog/VSPerfTest\"),\r\n      axios(\"/api/importlog/VSPerfTest2\"),\r\n    ]);\r\n    var combined = result1.data.items.map(o1 => {\r\n      const o2 = find(result2.data.items, x => x.id === o1.id);\r\n      return {\r\n        VSPerfTest: o1,\r\n        VSPerfTest2: o2,\r\n      };\r\n    });\r\n    setData({ items: combined });\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleAutorefresh = () => {\r\n    var newValue = !timerToggle;\r\n    setTimerToggle(newValue);\r\n    if (newValue) {\r\n      fetchData();\r\n      start();\r\n    } else {\r\n      stop();\r\n    }\r\n  };\r\n  return (\r\n    <Grid>\r\n      <Typography variant=\"h2\">Import logs</Typography>\r\n      <div className=\"toolbar\">\r\n        <FormGroup row>\r\n          <FormControlLabel\r\n            control={<Checkbox checked={timerToggle} onChange={handleAutorefresh} value=\"checkedA\" />}\r\n            label=\"Autorefresh\"\r\n          />\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => fetchData()}>\r\n            Refresh\r\n          </Button>\r\n          {isLoading && (\r\n            <Typography className={classes.loading} variant=\"subtitle1\">\r\n              Loading ...\r\n            </Typography>\r\n          )}\r\n        </FormGroup>\r\n      </div>\r\n\r\n      <Logs rows={data.items} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(HomePage);\r\n","import React from \"react\";\r\nimport { Typography, Paper, Grid } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nconst EnvironmentInfo = ({ environment, classes, items }) => {\r\n  var rows = items || [];\r\n  return (\r\n    <Grid item xs={6}>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\">{environment}</Typography>\r\n        {rows.map(x => (\r\n          <div key={x.id}>\r\n            <Typography variant=\"h6\">{x.fileName}</Typography>\r\n            <div>\r\n              <dl>\r\n                <dt>Number Of Rows</dt>\r\n                <dd>{x.numberOfRows}</dd>\r\n\r\n                <dt>Number Of Commands</dt>\r\n                <dd>{x.numberOfCommands}</dd>\r\n\r\n                <dt>Number Of Errors</dt>\r\n                <dd>{x.numberOfErrors}</dd>\r\n\r\n                <dt>Number Of Duplicates</dt>\r\n                <dd>{x.numberOfDuplicates}</dd>\r\n              </dl>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(EnvironmentInfo);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Table, TableBody, TableCell, TableHead, TableRow, Paper, Typography } from \"@material-ui/core\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\n\r\nconst CustomTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: blue[500],\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: \"auto\",\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  row: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n});\r\n\r\nconst ColoredNotZero = ({ value }) => {\r\n  const color = value !== 0 ? \"error\" : \"secondary\";\r\n  return (\r\n    <Typography variant=\"caption\" color={color}>\r\n      {value}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst Details = ({ classes, detail }) => {\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <CustomTableCell>Description</CustomTableCell>\r\n            <CustomTableCell>EventTypeID</CustomTableCell>\r\n            <CustomTableCell>NumberOfRows1</CustomTableCell>\r\n            <CustomTableCell>NumberOfRows2</CustomTableCell>\r\n            <CustomTableCell>Diff</CustomTableCell>\r\n            <CustomTableCell>TodoLogDetailID</CustomTableCell>\r\n            <CustomTableCell>TodoLogID</CustomTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {detail.map(x => {\r\n            return (\r\n              <TableRow key={x.eventTypeID}>\r\n                <CustomTableCell>{x.description}</CustomTableCell>\r\n                <CustomTableCell>{x.eventTypeID}</CustomTableCell>\r\n                <CustomTableCell>{x.numberOfRows1}</CustomTableCell>\r\n                <CustomTableCell>{x.numberOfRows2}</CustomTableCell>\r\n                <CustomTableCell>\r\n                  <ColoredNotZero value={x.numberOfRows1 - x.numberOfRows2} />\r\n                </CustomTableCell>\r\n                <CustomTableCell>{x.todoLogDetailID}</CustomTableCell>\r\n                <CustomTableCell>{x.todoLogID}</CustomTableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nDetails.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Details);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { find, sortBy, differenceBy, each } from \"lodash\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport EnvironmentInfo from \"./components/EnvironmentInfo\";\r\nimport Details from \"./components/Details\";\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nconst LogDetail = ({ match }) => {\r\n  const [id1] = useState(match.params.id1 ? parseInt(match.params.id1) : 0);\r\n  const [id2] = useState(match.params.id2 ? parseInt(match.params.id2) : 0);\r\n  const [data, setData] = useState({ items: { item1: [], item2: [], detail: [] } });\r\n  const environments = [\"VSPerfTest\", \"VSPerfTest2\"];\r\n  const fetchData = async () => {\r\n    const [result1, result2, detail1, detail2] = await Promise.all([\r\n      axios(`/api/importlog/${environments[0]}/${id1}`),\r\n      axios(`/api/importlog/${environments[1]}/${id2}`),\r\n      axios(`/api/importlog/detail/${environments[0]}/${id1}`),\r\n      axios(`/api/importlog/detail/${environments[1]}/${id2}`),\r\n    ]);\r\n    var combined = detail1.data.items.map(o1 => {\r\n      const o2 = find(detail2.data.items, x => x.eventTypeID === o1.eventTypeID);\r\n      const { numberOfRows, ...retVal } = o1;\r\n      return { ...retVal, numberOfRows1: o1.numberOfRows, numberOfRows2: (o2 && o2.numberOfRows) || 0 };\r\n    });\r\n    var diff = differenceBy(detail1.data.items, detail2.data.items, \"eventTypeID\");\r\n    each(diff, item => {\r\n      const { numberOfRows, ...rest } = item;\r\n      combined.push({ numberOfRows1: numberOfRows, numberOfRows2: 0, ...rest });\r\n    });\r\n    setData({\r\n      items: {\r\n        item1: result1.data.items,\r\n        item2: result2.data.items,\r\n        detail: sortBy(combined, \"eventTypeID\"),\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Typography variant=\"h2\">\r\n        {id1} - {id2}\r\n      </Typography>\r\n      <Grid container spacing={24}>\r\n        <Details detail={data.items.detail} />\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h4\">Files overview</Typography>\r\n        </Grid>\r\n        <EnvironmentInfo key={environments[0]} environment={environments[0]} items={data.items.item1 || []} />\r\n        <EnvironmentInfo key={environments[1]} environment={environments[1]} items={data.items.item2 || []} />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(LogDetail);\r\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport withRoot from \"./components/withRoot\";\nimport HomePage from \"./pages/home/home\";\nimport \"./App.css\";\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Grid, AppBar, Button, Toolbar } from \"@material-ui/core\";\nimport LogDetail from \"./pages/log_detail/log-detail\";\n\nconst styles = theme => ({\n  root: {\n    textAlign: \"center\",\n    paddingTop: theme.spacing.unit * 2,\n    paddingLeft: theme.spacing.unit * 2,\n    paddingRight: theme.spacing.unit * 2,\n  },\n});\n\nconst HomeLink = props => <Link to=\"/\" {...props} />;\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Grid container spacing={24}>\n          <Grid item xs={12}>\n            <AppBar>\n              <Toolbar>\n                <Button color=\"inherit\" component={HomeLink}>\n                  Home\n                </Button>\n              </Toolbar>\n            </AppBar>\n          </Grid>\n          <Grid item xs={12}>\n            <div className=\"main-page\">\n              <Route exact path=\"/\" component={HomePage} />\n              <Route exact path=\"/log-detail/:id1/:id2\" component={LogDetail} />\n            </div>\n          </Grid>\n        </Grid>\n      </Router>\n    );\n  }\n}\n\nexport default withRoot(withStyles(styles)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"react-app-polyfill/ie11\";\nimport \"typeface-roboto\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}